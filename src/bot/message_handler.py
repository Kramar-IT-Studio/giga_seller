"""Telegram message handlers."""

from telegram import Update
from telegram.ext import ContextTypes

from src.services.chat_service import ChatService
from src.services.state_service import StateService


class MessageHandler:
    """Handler for telegram messages."""

    def __init__(self, chat_service: ChatService) -> None:
        """Initialize message handler."""
        self._chat_service = chat_service
        self._state_service = StateService()

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Handle /start command."""
        if not update.message or not update.effective_user:
            return

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        self._state_service.reset_state(update.effective_user.id)
        
        await update.message.reply_text(
            "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. "
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
        )

    async def handle_message(
        self, update: Update, context: ContextTypes.DEFAULT_TYPE
    ) -> None:
        """Handle user messages."""
        if not update.message or not update.effective_user:
            return

        user_id = update.effective_user.id
        message_text = update.message.text or ""
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
            state = self._state_service.get_state(user_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..."
            await update.message.chat.send_action("typing")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ GigaChat
            response = await self._chat_service.generate_response(message_text)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await update.message.reply_text(response)
            
        except Exception as e:
            await update.message.reply_text(f"üò¢ –û—à–∏–±–∫–∞: {str(e)}")
